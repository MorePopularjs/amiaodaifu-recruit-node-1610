阿缪大夫1610招聘 node线上题目

题目背景
本题目是由原先的现场编程题改造而来，原题目参见附件，限定的完成时间为30min。
通过并提交代码后，我们会查看你提交的代码，并尽快安排面试。

题目内容
1. 基本内容
服务器上有一颗随机生成的n叉树，服务器提供一个接口可以获得指定id节点的子节点id列表，请通过该接口构造出与服务器结构一致的树。
2. 扩展内容（加分项）
第2步时对我们的服务器温柔一点，将最大并发量控制为5。

API描述
1. 获得一个新题目
方法：POST
地址：http://hr.amiaodaifu.com:50000/1610/new-question
请求内容：{mail: '你的邮箱'}
返回结果：{id: 题目ID， rootId: 树根节点ID}

2. 获得指定节点的子节点ID列表
方法：GET
地址：http://hr.amiaodaifu.com:50000/1610/questions/[题目ID]/get-children/[节点ID]
返回: 包含该节点所有children的ID的数组（顺序与树的结构一致）

3. 结果验证
方法：POST
地址：http://hr.amiaodaifu.com:50000/1610/questions/[题目ID]/check
请求内容：{root: 构造出的树}
返回结果：{pass: 是否通过, concurrency: 第二步时的最大并发量, time:总耗时（ms）}

4. 提交源代码和个人联系信息
方法：POST
地址：http://hr.amiaodaifu.com:50000/1610/questions/[题目ID]/submit
请求内容：{name: 你的名字(String), forFun: 是否只是来做题娱乐一下(Boolean), phone: 你的联系电话(String), sourceCode: 源代码(String)}
返回结果：{ msg: 'thank you!' }


其他说明
1. 所有请求的数据都是json形式
2. 每次尝试会新生一个新题目（一棵随机的树），如果测试失败或者五分钟内未测试，该题会被删除
3. 服务器上的树的每个节点的存储形式为 {id: 节点ID, children: [该节点的子节点]}，叶子节点的children为[]

实际例子

POST http://hr.amiaodaifu.com:50000/1610/new-question
发送 { "mail": "test@test.com"}
返回 { "id": "8931bdcd-269a-4abb-957e-0ad09cb8bbb3", "rootId": 1 }

服务器生成了一棵随机的树如下
{
  "id": 1,
  "children": [{
    "id": 2,
    "children": [
      {"id": 5, "children": []},
      {"id": 6, "children": []}
    ]
  }, {
    "id": 3,
    "children": [{"id": 7, "children": []}]
  }]
}

GET http://hr.amiaodaifu.com:50000/1610/questions/8931bdcd-269a-4abb-957e-0ad09cb8bbb3/get-children/1  返回 [2, 3]
GET http://hr.amiaodaifu.com:50000/1610/questions/8931bdcd-269a-4abb-957e-0ad09cb8bbb3/get-children/2  返回 [5, 6]
GET http://hr.amiaodaifu.com:50000/1610/questions/8931bdcd-269a-4abb-957e-0ad09cb8bbb3/get-children/5  返回 []
GET http://hr.amiaodaifu.com:50000/1610/questions/8931bdcd-269a-4abb-957e-0ad09cb8bbb3/get-children/6  返回 []
GET http://hr.amiaodaifu.com:50000/1610/questions/8931bdcd-269a-4abb-957e-0ad09cb8bbb3/get-children/3  返回 [7]
GET http://hr.amiaodaifu.com:50000/1610/questions/8931bdcd-269a-4abb-957e-0ad09cb8bbb3/get-children/7  返回 []

POST http://hr.amiaodaifu.com:50000/1610/questions/8931bdcd-269a-4abb-957e-0ad09cb8bbb3/check
发送
{
  "root": {
    "id": 1,
    "children": [{
      "id": 2,
      "children": [
        {"id": 5, "children": []},
        {"id": 6, "children": []}
      ]
    }, {
      "id": 3,
      "children": [{"id": 7, "children": []}]
    }]
  }
}
返回
{ "pass": true, "concurrency": 4, "time": 539 }

POST http://hr.amiaodaifu.com:50000/1610/questions/8931bdcd-269a-4abb-957e-0ad09cb8bbb3/submit
发送
{ "name": "测试", "forFun": false, phone: "13900000000", sourceCode: "......" }
返回
{ "msg": "thank you!" }
